{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng2-charts/lib/default-colors.ts","ng://ng2-charts/lib/get-colors.ts","ng://ng2-charts/lib/theme.service.ts","ng://ng2-charts/lib/base-chart.directive.ts","ng://ng2-charts/lib/charts.module.ts","ng://ng2-charts/lib/monkey-patch-chart-js-legend.ts","ng://ng2-charts/lib/monkey-patch-chart-js-tooltip.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","defaultColors","getColors","chartType","index","count","formatPieColors","generateColors","backgroundColor","colors","map","color","rgba","borderColor","hoverBackgroundColor","hoverBorderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","formatLineColor","generateColor","formatBarColor","Error","colour","alpha","concat","join","getRandomInt","min","max","Math","floor","random","getRandomColor","colorsArr","Array","ThemeService","pColorschemesOptions","colorschemesOptions","BehaviorSubject","setColorschemesOptions","options","getColorschemesOptions","Injectable","args","providedIn","UpdateType","Default","Update","Refresh","BaseChartDirective","element","themeService","chartClick","EventEmitter","chartHover","old","dataExists","dataLength","datasetsExists","datasetsLength","datasetsDataObjects","datasetsDataLengths","colorsExists","labelsExist","labels","legendExists","legend","subs","registerPlugin","plugin","chartJs.Chart","plugins","register","unregisterPlugin","unregister","ngOnInit","_this","ctx","nativeElement","getContext","refresh","subscribe","themeChanged","ngDoCheck","chart","updateRequired","wantUpdate","x","data","propagateDataToDatasets","datasets","filter","updateColors","colorsEqual","copyColor","labelsEqual","copyLabel","position","update","a","isArray","__spread","b","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointRadius","pointHoverRadius","pointHitRadius","pointHoverBorderWidth","pointStyle","hoverBorderWidth","forEach","elm","ngOnChanges","changes","currentValue","propagateDatasetsToData","config","display","generateLegend","ngOnDestroy","destroy","unsubscribe","duration","lazy","hideDataset","hidden","getDatasetMeta","isDatasetHidden","toBase64Image","getChartConfiguration","getDatasets","hover","onHover","event","active","emit","onClick","mergedOptions","smartMerge","type","getChartBuilder","chartConfig","overrides","level","cloneDeep","keys","key","arrayElements","isMultiLineLabel","label","joinLabel","newDataValues","isMultiDataSet","dataset","splice","Directive","selector","exportAs","ElementRef","Input","Output","ChartsModule","NgModule","declarations","imports","exports","Chart","getAll","id","_element","fit","me","opts","labelOpts","labelFont","helpers","_parseFont","fontSize","size","hitboxes","legendHitBoxes","minSize","isHorizontal","width","maxWidth","height","maxHeight","getMaxLineWidth","textLines","textLine","measureText","reduce","acc","v","font","string","lineWidths","lineHeights","currentLineHeight","lineIndex","textAlign","textBaseline","each","legendItems","legendItem","text","padding","getBoxWidth","lineOrColumnIndex","left","top","vPadding","columnWidths","columnHeights","totalWidth","currentColWidth","currentColHeight","columnIndex","itemWidth","draw","globalDefaults","defaults","global","defaultColor","lineDefault","elements","line","legendHeight","legendWidth","cursor","fontColor","valueOrDefault","defaultFontColor","lineWidth","strokeStyle","fillStyle","boxWidth","fillText","y","textWidth","halfFontSize","xLeft","yMiddle","lineOffset","w","h","beginPath","moveTo","lineTo","stroke","drawCrossOver","drawStrikeThrough","alignmentOffset","dimension","blockSize","align","boxTopOffset","topOffset","trunc","isNaN","save","lineCap","lineDashOffset","lineJoin","setLineDash","lineDash","usePointStyle","radius","SQRT2","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","drawLegendBox","console","log","Tooltip","drawBody","pt","vm","textColor","bodyFontSize","bodySpacing","bodyAlign","_bodyAlign","body","drawColorBoxes","displayColors","labelColors","xLinePadding","colorX","getAlignedX","fontString","_bodyFontStyle","_bodyFontFamily","fillLineOfText","bodyFontColor","beforeBody","bodyItem","labelTextColors","before","legendColorBackground","lines","after","afterBody","xPadding"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const defaultColors: Array<number[]> = [\n  [255, 99, 132],\n  [54, 162, 235],\n  [255, 206, 86],\n  [231, 233, 237],\n  [75, 192, 192],\n  [151, 187, 205],\n  [220, 220, 220],\n  [247, 70, 74],\n  [70, 191, 189],\n  [253, 180, 92],\n  [148, 159, 177],\n  [77, 83, 96]\n];\n","import { Color } from './color';\nimport { Colors } from './colors';\nimport { defaultColors } from './default-colors';\n\n/**\n * Generate colors by chart type\n */\nexport function getColors(chartType: string, index: number, count: number): Color {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n\n  if (chartType === 'bubble') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'scatter') {\n    return formatPieColors(generateColors(count));\n  }\n\n  throw new Error(`getColors - Unsupported chart type ${chartType}`);\n}\n\nfunction rgba(colour: Array<number>, alpha: number): string {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction formatLineColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n\nfunction formatBarColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n\nfunction formatPieColors(colors: Array<number[]>): Colors {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map(() => '#fff'),\n    pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointBorderColor: colors.map(() => '#fff'),\n    pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction formatPolarAreaColors(colors: Array<number[]>): Color {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map((color: number[]) => rgba(color, 1)),\n    hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 0.8)),\n    hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction getRandomColor(): number[] {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n/**\n * Generate colors for line|bar charts\n */\nfunction generateColor(index: number): number[] {\n  return defaultColors[index] || getRandomColor();\n}\n\n/**\n * Generate colors for pie|doughnut charts\n */\nfunction generateColors(count: number): Array<number[]> {\n  const colorsArr: Array<number[]> = new Array(count);\n  for (let i = 0; i < count; i++) {\n    colorsArr[i] = defaultColors[i] || getRandomColor();\n  }\n  return colorsArr;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ChartOptions } from 'chart.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private pColorschemesOptions: ChartOptions = {};\n  public colorschemesOptions = new BehaviorSubject<ChartOptions>({});\n\n  constructor() { }\n\n  setColorschemesOptions(options: ChartOptions) {\n    this.pColorschemesOptions = options;\n    this.colorschemesOptions.next(options);\n  }\n\n  getColorschemesOptions() {\n    return this.pColorschemesOptions;\n  }\n}\n","import {\n  Directive,\n  OnDestroy,\n  OnChanges,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  DoCheck,\n} from '@angular/core';\nimport * as chartJs from 'chart.js';\nimport { getColors } from './get-colors';\nimport { Color } from './color';\nimport { ThemeService } from './theme.service';\nimport { Subscription } from 'rxjs';\nimport { cloneDeep } from 'lodash-es';\n\nexport type SingleDataSet = (number[] | chartJs.ChartPoint[]);\nexport type MultiDataSet = (number[] | chartJs.ChartPoint[])[];\nexport type SingleOrMultiDataSet = SingleDataSet | MultiDataSet;\n\nexport type PluginServiceGlobalRegistrationAndOptions = chartJs.PluginServiceGlobalRegistration & chartJs.PluginServiceRegistrationOptions;\nexport type SingleLineLabel = string;\nexport type MultiLineLabel = string[];\nexport type Label = SingleLineLabel | MultiLineLabel;\n\ninterface OldState {\n  dataExists: boolean;\n  dataLength: number;\n  datasetsExists: boolean;\n  datasetsLength: number;\n  datasetsDataObjects: any[];\n  datasetsDataLengths: number[];\n  colorsExists: boolean;\n  colors: Color[];\n  labelsExist: boolean;\n  labels: Label[];\n  legendExists: boolean;\n  legend: {\n    position?: string;\n  };\n}\n\nenum UpdateType {\n  Default,\n  Update,\n  Refresh\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'canvas[baseChart]',\n  exportAs: 'base-chart'\n})\nexport class BaseChartDirective implements OnDestroy, OnChanges, OnInit, OnDestroy, DoCheck {\n  @Input() public data: SingleOrMultiDataSet;\n  @Input() public datasets: chartJs.ChartDataSets[];\n  @Input() public labels: Label[];\n  @Input() public options: chartJs.ChartOptions = {};\n  @Input() public chartType: chartJs.ChartType;\n  @Input() public colors: Color[];\n  @Input() public legend: boolean;\n  @Input() public plugins: PluginServiceGlobalRegistrationAndOptions[];\n\n  @Output() public chartClick: EventEmitter<{ event?: MouseEvent, active?: {}[] }> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<{ event: MouseEvent, active: {}[] }> = new EventEmitter();\n\n  public ctx: string;\n  public chart: Chart;\n\n  private old: OldState = {\n    dataExists: false,\n    dataLength: 0,\n    datasetsExists: false,\n    datasetsLength: 0,\n    datasetsDataObjects: [],\n    datasetsDataLengths: [],\n    colorsExists: false,\n    colors: [],\n    labelsExist: false,\n    labels: [],\n    legendExists: false,\n    legend: {},\n  };\n\n  private subs: Subscription[] = [];\n\n  /**\n   * Register a plugin.\n   */\n  public static registerPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\n    chartJs.Chart.plugins.register(plugin);\n  }\n\n  public static unregisterPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\n    chartJs.Chart.plugins.unregister(plugin);\n  }\n\n  public constructor(\n    private element: ElementRef,\n    private themeService: ThemeService,\n  ) { }\n\n  public ngOnInit() {\n    this.ctx = this.element.nativeElement.getContext('2d');\n    this.refresh();\n    this.subs.push(this.themeService.colorschemesOptions.subscribe(r => this.themeChanged(r)));\n  }\n\n  private themeChanged(options: {}) {\n    this.refresh();\n  }\n\n  ngDoCheck(): void {\n    if (!this.chart) {\n      return;\n    }\n    let updateRequired = UpdateType.Default;\n    const wantUpdate = (x: UpdateType) => {\n      updateRequired = x > updateRequired ? x : updateRequired;\n    };\n\n    if (!!this.data !== this.old.dataExists) {\n      this.propagateDataToDatasets(this.data);\n\n      this.old.dataExists = !!this.data;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.data && this.data.length !== this.old.dataLength) {\n      this.old.dataLength = this.data && this.data.length || 0;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.datasets !== this.old.datasetsExists) {\n      this.old.datasetsExists = !!this.datasets;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\n      this.old.datasetsLength = this.datasets && this.datasets.length || 0;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.filter((x, i) => x.data !== this.old.datasetsDataObjects[i]).length) {\n      this.old.datasetsDataObjects = this.datasets.map(x => x.data);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.filter((x, i) => x.data.length !== this.old.datasetsDataLengths[i]).length) {\n      this.old.datasetsDataLengths = this.datasets.map(x => x.data.length);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.colors !== this.old.colorsExists) {\n      this.old.colorsExists = !!this.colors;\n\n      this.updateColors();\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    // This smells of inefficiency, might need to revisit this\n    if (this.colors && this.colors.filter((x, i) => !this.colorsEqual(x, this.old.colors[i])).length) {\n      this.old.colors = this.colors.map(x => this.copyColor(x));\n\n      this.updateColors();\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.labels !== this.old.labelsExist) {\n      this.old.labelsExist = !!this.labels;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.labels && this.labels.filter((x, i) => !this.labelsEqual(x, this.old.labels[i])).length) {\n      this.old.labels = this.labels.map(x => this.copyLabel(x));\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.options.legend !== this.old.legendExists) {\n      this.old.legendExists = !!this.options.legend;\n\n      wantUpdate(UpdateType.Refresh);\n    }\n\n    if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\n      this.old.legend.position = this.options.legend.position;\n\n      wantUpdate(UpdateType.Refresh);\n    }\n\n    switch (updateRequired as UpdateType) {\n      case UpdateType.Default:\n        break;\n      case UpdateType.Update:\n        this.update();\n        break;\n      case UpdateType.Refresh:\n        this.refresh();\n        break;\n    }\n  }\n\n  copyLabel(a: Label): Label {\n    if (Array.isArray(a)) {\n      return [...a];\n    }\n    return a;\n  }\n\n  labelsEqual(a: Label, b: Label) {\n    return true\n      && Array.isArray(a) === Array.isArray(b)\n      && (Array.isArray(a) || a === b)\n      && (!Array.isArray(a) || a.length === b.length)\n      && (!Array.isArray(a) || a.filter((x, i) => x !== b[i]).length === 0)\n      ;\n  }\n\n  copyColor(a: Color): Color {\n    const rc: Color = {\n      backgroundColor: a.backgroundColor,\n      borderWidth: a.borderWidth,\n      borderColor: a.borderColor,\n      borderCapStyle: a.borderCapStyle,\n      borderDash: a.borderDash,\n      borderDashOffset: a.borderDashOffset,\n      borderJoinStyle: a.borderJoinStyle,\n      pointBorderColor: a.pointBorderColor,\n      pointBackgroundColor: a.pointBackgroundColor,\n      pointBorderWidth: a.pointBorderWidth,\n      pointRadius: a.pointRadius,\n      pointHoverRadius: a.pointHoverRadius,\n      pointHitRadius: a.pointHitRadius,\n      pointHoverBackgroundColor: a.pointHoverBackgroundColor,\n      pointHoverBorderColor: a.pointHoverBorderColor,\n      pointHoverBorderWidth: a.pointHoverBorderWidth,\n      pointStyle: a.pointStyle,\n      hoverBackgroundColor: a.hoverBackgroundColor,\n      hoverBorderColor: a.hoverBorderColor,\n      hoverBorderWidth: a.hoverBorderWidth,\n    };\n\n    return rc;\n  }\n\n  colorsEqual(a: Color, b: Color) {\n    if (!a !== !b) {\n      return false;\n    }\n    return !a || true\n      && (a.backgroundColor === b.backgroundColor)\n      && (a.borderWidth === b.borderWidth)\n      && (a.borderColor === b.borderColor)\n      && (a.borderCapStyle === b.borderCapStyle)\n      && (a.borderDash === b.borderDash)\n      && (a.borderDashOffset === b.borderDashOffset)\n      && (a.borderJoinStyle === b.borderJoinStyle)\n      && (a.pointBorderColor === b.pointBorderColor)\n      && (a.pointBackgroundColor === b.pointBackgroundColor)\n      && (a.pointBorderWidth === b.pointBorderWidth)\n      && (a.pointRadius === b.pointRadius)\n      && (a.pointHoverRadius === b.pointHoverRadius)\n      && (a.pointHitRadius === b.pointHitRadius)\n      && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\n      && (a.pointHoverBorderColor === b.pointHoverBorderColor)\n      && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\n      && (a.pointStyle === b.pointStyle)\n      && (a.hoverBackgroundColor === b.hoverBackgroundColor)\n      && (a.hoverBorderColor === b.hoverBorderColor)\n      && (a.hoverBorderWidth === b.hoverBorderWidth)\n      ;\n  }\n\n  updateColors() {\n    this.datasets.forEach((elm, index) => {\n      if (this.colors && this.colors[index]) {\n        Object.assign(elm, this.colors[index]);\n      } else {\n        Object.assign(elm, getColors(this.chartType, index, elm.data.length), { ...elm });\n      }\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    let updateRequired = UpdateType.Default;\n    const wantUpdate = (x: UpdateType) => {\n      updateRequired = x > updateRequired ? x : updateRequired;\n    };\n\n    // Check if the changes are in the data or datasets or labels or legend\n\n    if (changes.hasOwnProperty('data') && changes.data.currentValue) {\n      this.propagateDataToDatasets(changes.data.currentValue);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\n      this.propagateDatasetsToData(changes.datasets.currentValue);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('labels')) {\n      if (this.chart) {\n        this.chart.data.labels = changes.labels.currentValue;\n      }\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('legend')) {\n      if (this.chart) {\n        this.chart.config.options.legend.display = changes.legend.currentValue;\n        this.chart.generateLegend();\n      }\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('options')) {\n      wantUpdate(UpdateType.Refresh);\n    }\n\n    switch (updateRequired as UpdateType) {\n      case UpdateType.Update:\n        this.update();\n        break;\n      case UpdateType.Refresh:\n      case UpdateType.Default:\n        this.refresh();\n        break;\n    }\n  }\n\n  public ngOnDestroy() {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  public update(duration?: any, lazy?: any) {\n    if (this.chart) {\n      return this.chart.update(duration, lazy);\n    }\n  }\n\n  public hideDataset(index: number, hidden: boolean) {\n    this.chart.getDatasetMeta(index).hidden = hidden;\n    this.chart.update();\n  }\n\n  public isDatasetHidden(index: number): boolean {\n    return this.chart.getDatasetMeta(index).hidden;\n  }\n\n  public toBase64Image(): string {\n    return this.chart.toBase64Image();\n  }\n\n  public getChartConfiguration(): chartJs.ChartConfiguration {\n    const datasets = this.getDatasets();\n\n    const options = Object.assign({}, this.options);\n    if (this.legend === false) {\n      options.legend = { display: false };\n    }\n    // hook for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (event: MouseEvent, active: {}[]) => {\n        if (active && !active.length) {\n          return;\n        }\n        this.chartHover.emit({ event, active });\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event?: MouseEvent, active?: {}[]) => {\n        this.chartClick.emit({ event, active });\n      };\n    }\n\n    const mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\n\n    const chartConfig: chartJs.ChartConfiguration = {\n      type: this.chartType,\n      data: {\n        labels: this.labels || [],\n        datasets\n      },\n      plugins: this.plugins,\n      options: mergedOptions,\n    };\n\n    return chartConfig;\n  }\n\n  public getChartBuilder(ctx: string/*, data:any[], options:any*/): Chart {\n    const chartConfig = this.getChartConfiguration();\n    return new chartJs.Chart(ctx, chartConfig);\n  }\n\n  smartMerge(options: any, overrides: any, level: number = 0): any {\n    if (level === 0) {\n      options = cloneDeep(options);\n    }\n    const keysToUpdate = Object.keys(overrides);\n    keysToUpdate.forEach(key => {\n      if (Array.isArray(overrides[key])) {\n        const arrayElements = options[key];\n        if (arrayElements) {\n          arrayElements.forEach(r => {\n            this.smartMerge(r, overrides[key][0], level + 1);\n          });\n        }\n      } else if (typeof (overrides[key]) === 'object') {\n        if (!(key in options)) {\n          options[key] = {};\n        }\n        this.smartMerge(options[key], overrides[key], level + 1);\n      } else {\n        options[key] = overrides[key];\n      }\n    });\n    if (level === 0) {\n      return options;\n    }\n  }\n\n  private isMultiLineLabel(label: Label): label is MultiLineLabel {\n    return Array.isArray(label);\n  }\n\n  private joinLabel(label: Label): string {\n    if (!label) {\n      return null;\n    }\n    if (this.isMultiLineLabel(label)) {\n      return label.join(' ');\n    } else {\n      return label;\n    }\n  }\n\n  private propagateDatasetsToData(datasets: chartJs.ChartDataSets[]) {\n    this.data = this.datasets.map(r => r.data);\n    if (this.chart) {\n      this.chart.data.datasets = datasets;\n    }\n    this.updateColors();\n  }\n\n  private propagateDataToDatasets(newDataValues: SingleOrMultiDataSet): void {\n    if (this.isMultiDataSet(newDataValues)) {\n      if (this.datasets && newDataValues.length === this.datasets.length) {\n        this.datasets.forEach((dataset, i: number) => {\n          dataset.data = newDataValues[i];\n        });\n      } else {\n        this.datasets = newDataValues.map((data: number[], index: number) => {\n          return { data, label: this.joinLabel(this.labels[index]) || `Label ${index}` };\n        });\n        if (this.chart) {\n          this.chart.data.datasets = this.datasets;\n        }\n      }\n    } else {\n      if (!this.datasets) {\n        this.datasets = [{ data: newDataValues }];\n        if (this.chart) {\n          this.chart.data.datasets = this.datasets;\n        }\n      } else {\n        this.datasets[0].data = newDataValues;\n        this.datasets.splice(1); // Remove all elements but the first\n      }\n    }\n    this.updateColors();\n  }\n\n  private isMultiDataSet(data: SingleOrMultiDataSet): data is MultiDataSet {\n    return Array.isArray(data[0]);\n  }\n\n  private getDatasets() {\n    if (!this.datasets && !this.data) {\n      throw new Error(`ng-charts configuration error, data or datasets field are required to render chart ${this.chartType}`);\n    }\n\n    // If `datasets` is defined, use it over the `data` property.\n    if (this.datasets) {\n      this.propagateDatasetsToData(this.datasets);\n      return this.datasets;\n    }\n\n    if (this.data) {\n      this.propagateDataToDatasets(this.data);\n      return this.datasets;\n    }\n  }\n\n  private refresh() {\n    // if (this.options && this.options.responsive) {\n    //   setTimeout(() => this.refresh(), 50);\n    // }\n\n    // todo: remove this line, it is producing flickering\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    if (this.ctx) {\n      this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BaseChartDirective } from './base-chart.directive';\n\n@NgModule({\n  declarations: [\n    BaseChartDirective\n  ],\n  imports: [\n  ],\n  exports: [\n    BaseChartDirective\n  ]\n})\nexport class ChartsModule { }\n","// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n\ndeclare class Chart {\n  static readonly Chart: typeof Chart;\n  static readonly Tooltip: any;\n  static readonly helpers: any;\n  static readonly defaults: any;\n  static readonly plugins: any;\n}\n\nexport function monkeyPatchChartJsLegend() {\n  if (typeof Chart === 'undefined') {\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n    return;\n  }\n  const plugins = Chart.plugins.getAll();\n  const legend = plugins.filter(p => p.id === 'legend')[0];\n  legend._element.prototype.fit = fit;\n  legend._element.prototype.draw = draw;\n\n  const helpers = Chart.helpers;\n  const defaults = Chart.defaults;\n  const valueOrDefault = helpers.valueOrDefault;\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n      fontSize :\n      labelOpts.boxWidth;\n  }\n\n  function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n\n    var ctx = me.ctx;\n\n    var labelFont = helpers.options._parseFont(labelOpts);\n    var fontSize = labelFont.size;\n\n    // Reset hit boxes\n    var hitboxes = me.legendHitBoxes = [];\n\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    var getMaxLineWidth = function (textLines) {\n      return textLines.map(function (textLine) {\n        return ctx.measureText(textLine).width;\n      }).reduce(function (acc, v) {\n        return v > acc ? v : acc;\n      }, 0);\n    };\n\n    // Increase sizes here\n    if (display) {\n      ctx.font = labelFont.string;\n\n      if (isHorizontal) {\n\n        // Labels\n\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var lineHeights = me.lineHeights = [];\n        var currentLineHeight = 0;\n        var lineIndex = 0;\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var width, height;\n\n          if (helpers.isArray(legendItem.text)) {\n            width = getMaxLineWidth(legendItem.text);\n            height = fontSize * legendItem.text.length + labelOpts.padding;\n          } else {\n            width = ctx.measureText(legendItem.text).width;\n            height = fontSize + labelOpts.padding;\n          }\n          width += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n\n          if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\n            lineHeights.push(currentLineHeight);\n            currentLineHeight = 0;\n            lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n            lineIndex++;\n          }\n\n          legendItem.lineOrColumnIndex = lineIndex;\n\n          if (height > currentLineHeight) {\n            currentLineHeight = height;\n          }\n\n          // Store the hitbox width and height here. Final position will be updated in `draw`\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: height,\n          };\n\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n\n        lineHeights.push(currentLineHeight);\n        minSize.height += lineHeights.reduce(function (acc, v) {\n          return acc + v;\n        }, 0);\n\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var columnHeights = me.columnHeights = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var columnIndex = 0;\n\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var itemWidth;\n          var height;\n\n          if (helpers.isArray(legendItem.text)) {\n            itemWidth = getMaxLineWidth(legendItem.text);\n            height = fontSize * legendItem.text.length;\n          } else {\n            itemWidth = ctx.measureText(legendItem.text).width;\n            height = fontSize;\n          }\n          itemWidth += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n\n          // If too tall, go to new column\n          if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n            columnHeights.push(currentColHeight);\n            currentColWidth = 0;\n            currentColHeight = 0;\n            columnIndex++;\n          }\n\n          legendItem.lineOrColumnIndex = columnIndex;\n\n          // Get max width\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += height + vPadding;\n\n          // Store the hitbox width and height here. Final position will be updated in `draw`\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: height\n          };\n        });\n\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        columnHeights.push(currentColHeight);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  }\n\n  function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefaults = defaults.global;\n    var defaultColor = globalDefaults.defaultColor;\n    var lineDefault = globalDefaults.elements.line;\n    var legendHeight = me.height;\n    var columnHeights = me.columnHeights;\n    var columnWidths = me.columnWidths;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n    var lineHeights = me.lineHeights;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n      var labelFont = helpers.options._parseFont(labelOpts);\n      var fontSize = labelFont.size;\n      var cursor;\n\n      // Canvas setup\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n      ctx.fillStyle = fontColor; // render in correct colour\n      ctx.font = labelFont.string;\n\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes;\n\n      // current position\n      var drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        }\n\n        // Set the ctx for the box\n        ctx.save();\n\n        var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = boxWidth * Math.SQRT2 / 2;\n          var centerX = x + boxWidth / 2;\n          var centerY = y + fontSize / 2;\n\n          // Draw pointStyle as legend symbol\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (lineWidth !== 0) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var drawStrikeThrough = function (x, y, w) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + w, y);\n        ctx.stroke();\n      };\n\n      var drawCrossOver = function (x, y, w, h) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + w, y + h);\n        ctx.moveTo(x, y + h);\n        ctx.lineTo(x + w, y);\n        ctx.stroke();\n      };\n\n      var fillText = function (x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n\n        if (helpers.isArray(legendItem.text)) {\n          helpers.each(legendItem.text, function (textLine, index) {\n            var lineOffset = index * fontSize;\n            ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\n          });\n        } else {\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n        }\n\n        if (legendItem.hidden) {\n          if (helpers.isArray(legendItem.text)) {\n            drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\n          } else {\n            drawStrikeThrough(xLeft, yMiddle, textWidth);\n          }\n        }\n      };\n\n      var alignmentOffset = function (dimension, blockSize) {\n        switch (opts.align) {\n          case 'start':\n            return labelOpts.padding;\n          case 'end':\n            return dimension - blockSize;\n          default: // center\n            return (dimension - blockSize + labelOpts.padding) / 2;\n        }\n      };\n\n      // Horizontal\n      var isHorizontal = me.isHorizontal();\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\n          line: 0\n        };\n      }\n\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth, height, boxTopOffset;\n\n        if (legendItem.lineOrColumnIndex > cursor.line) {\n          if (isHorizontal) {\n            cursor.y += lineHeights[cursor.line];\n            cursor.line = legendItem.lineOrColumnIndex;\n            cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\n          } else {\n            cursor.x += columnWidths[cursor.line] + labelOpts.padding;\n            cursor.line = legendItem.lineOrColumnIndex;\n            cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\n          }\n        }\n\n        if (helpers.isArray(legendItem.text)) {\n          textWidth = legendItem.text.map(function (textLine) {\n            return ctx.measureText(textLine).width;\n          }).reduce(function (acc, v) {\n            return v > acc ? v : acc;\n          }, 0);\n          boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\n          height = fontSize * legendItem.text.length;\n        } else {\n          textWidth = ctx.measureText(legendItem.text).width;\n          boxTopOffset = 0;\n          height = fontSize;\n        }\n\n        var width = boxWidth + (fontSize / 2) + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\n\n        drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\n\n        hitboxes[i].left = x;\n        hitboxes[i].top = y;\n\n        // Fill the actual label\n        fillText(x, y + topOffset, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += height + labelOpts.padding;\n        }\n      });\n    }\n  }\n}\n","// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n\ndeclare class Chart {\n  static readonly Chart: typeof Chart;\n  static readonly Tooltip: any;\n  static readonly helpers: any;\n  static readonly defaults: any;\n  static readonly plugins: any;\n}\n\nexport function monkeyPatchChartJsTooltip() {\n  if (typeof Chart === 'undefined') {\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n    return;\n  }\n  Chart.Tooltip.prototype.drawBody = drawBody;\n  const helpers = Chart.helpers;\n\n  function getAlignedX(vm, align) {\n    return align === 'center'\n      ? vm.x + vm.width / 2\n      : align === 'right'\n        ? vm.x + vm.width - vm.xPadding\n        : vm.x + vm.xPadding;\n  }\n\n  function drawBody(pt, vm, ctx) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var bodyAlign = vm._bodyAlign;\n    var body = vm.body;\n    var drawColorBoxes = vm.displayColors;\n    var labelColors = vm.labelColors;\n    var xLinePadding = 0;\n    var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n    var textColor;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n    pt.x = getAlignedX(vm, bodyAlign);\n\n    // Before Body\n    var fillLineOfText = function (line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    };\n\n    // Before body lines\n    ctx.fillStyle = vm.bodyFontColor;\n    helpers.each(vm.beforeBody, fillLineOfText);\n\n    xLinePadding = drawColorBoxes && bodyAlign !== 'right'\n      ? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n      : 0;\n\n    // Draw body lines now\n    helpers.each(body, function (bodyItem, i) {\n      textColor = vm.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n\n      // Draw Legend-like boxes if needed\n      if (drawColorBoxes) {\n        // Fill a white rect so that colours merge nicely if the opacity is < 1\n        ctx.fillStyle = vm.legendColorBackground;\n        ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n        // Border\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = labelColors[i].borderColor;\n        ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n        // Inner square\n        ctx.fillStyle = labelColors[i].backgroundColor;\n        ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n        ctx.fillStyle = textColor;\n      }\n\n      helpers.each(bodyItem.lines, fillLineOfText);\n\n      helpers.each(bodyItem.after, fillLineOfText);\n    });\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n\n    // After body lines\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n}\n"]}